# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/global/resource_management/resmgr.gni")
import("//build/ohos.gni")
import("//foundation/appframework/ability/ability_runtime/ability_runtime.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

config("resmgr_napi_core_public_config") {
  include_dirs = [
    "//foundation/appframework/resource_management/interfaces/js/innerkits/core/include",
    "//base/global/resource_management/frameworks/resmgr/include",
    "${ace_root}/interfaces/inner_api/drawable_descriptor",
    "${skia_root_new}",
    "${crossplatform_multimedia_root}/image_framework/interfaces/innerkits/include",
    "${graphic_2d_path}/utils/color_manager/export",
    "${graphic_2d_path}/rosen/modules/platform/utils",
    "${ace_napi_frameworks}",
  ]
  configs = [
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:bundle_parser_config",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/configuration:configuration_config",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_pub_config",
    "//foundation/arkui/napi:ace_napi_config",
  ]
  if (resource_management_support_icu) {
    include_dirs += [
      "//third_party/icu/icu4c/source",
      "//third_party/icu/icu4c/source/common",
      "//third_party/icu/icu4c/source/i18n",
    ]
    defines = [ "SUPPORT_GRAPHICS" ]
  }
}

ohos_source_set("resmgr_napi_core") {
  defines = [ "__ARKUI_CROSS__" ]
  cflags = [
    "-std=c++17",
    "-Wno-ignored-attributes",
  ]

  sources = [
    "src/resource_manager_addon.cpp",
    "src/resource_manager_napi_async_impl.cpp",
    "src/resource_manager_napi_context.cpp",
    "src/resource_manager_napi_sync_impl.cpp",
    "src/resource_manager_napi_utils.cpp",
  ]

  configs = [ ":resmgr_napi_core_public_config" ]

  subsystem_name = "global"
  part_name = "resource_management"
}

# Copyright (c) 2023-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/appframework/ability/ability_runtime/ability_runtime.gni")
import("//foundation/arkui/ace_engine/build/ace_gen_obj.gni")

config("appkit_native_config") {
  include_dirs = [
    "//base/global/resource_management/interfaces/inner_api/include",
    "//base/global/resource_management/frameworks/resmgr/include",
    "//foundation/arkui/ace_engine/interfaces/inner_api/ace_kit/include",
    "//third_party/flutter/engine",
    "//third_party/json/include",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/app_manager",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/configuration",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/error",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/hilog",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/want",
    "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability",
    "${ability_runtime_cross_platform_path}/interfaces/kits/native/appkit",
    "${ability_runtime_cross_platform_path}/frameworks/native/base/bundle_parser/include",
    "${ability_runtime_cross_platform_path}/frameworks/native/base/event_handler/include",
    "${ability_runtime_cross_platform_path}/interfaces/kits/native/appkit/ability_delegator",
  ]

  if (target_os == "android") {
    include_dirs += [
      "//foundation/arkui/ace_engine/adapter/android/entrance/java/jni",
      "//foundation/arkui/ace_engine/adapter/android/stage/ability/java/jni",
    ]
  } else if (target_os == "ios") {
    include_dirs +=
        [ "//foundation/arkui/ace_engine/adapter/ios/stage/ability" ]
  }
}

template("ability_runtime_appkit_native") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    subsystem_name = ability_subsystem_name
    part_name = ability_part_name
    configs = [
      ":appkit_native_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:bundle_parser_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/hilog:ability_cross_platform_hilog_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime:jsruntime_config",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability:abilitykit_native_config",
    ]

    defines = []
    if (target_cpu == "arm64") {
      defines += [ "_ARM64_" ]
    }

    sources = [
      "${ability_runtime_cross_platform_path}/frameworks/native/app/ability_lifecycle_callback.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/ability_stage.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/ability_stage_context.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/app_main.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/application.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/application_context.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/application_context_manager.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/application_state_change_callback.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/js_ability_stage.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/js_ability_stage_context.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/js_application_context_utils.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/js_context_utils.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/app/stage_asset_manager.cpp",
    ]

    deps = [
      ":appkit_delegator",
      "${ability_runtime_cross_platform_path}/frameworks/native/base/event_handler:cross_platform_event_handler",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:cross_platform_bundle_parser",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/configuration:cross_platform_configuration",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/error:ability_runtime_error_util",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime:cross_platform_jsruntime",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/napi_base_context:napi_base_context",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/want:cross_platform_want",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability:cross_platform_abilitykit_native",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability:cross_platform_abilitykit_native",
    ]

    external_deps = [ "icu:static_icuuc" ]

    if (target_os == "android") {
      defines += [ "ANDROID_PLATFORM" ]
      deps += [ "//foundation/arkui/napi:ace_napi" ]
    } else if (target_os == "ios") {
      defines += [ "IOS_PLATFORM" ]
      deps += [ "//foundation/arkui/napi:ace_napi" ]
    }
    deps += [ "//foundation/appframework/resource_management:global_resmgr" ]
  }
}

# build so
template("appkit_delegator_appkit_native") {
  forward_variables_from(invoker, "*")
  ohos_source_set(target_name) {
    include_dirs = [
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/appkit/ability_delegator",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability",
      "//third_party/icu/icu4c/source/common",
      "//third_party/icu/icu4c/source",
      "//foundation/appframework/ability/ability_runtime/cross_platform/interfaces/inner_api/hilog",
      "//foundation/arkui/ace_engine/interfaces/inner_api/ace",
    ]

    configs = [
      ":appkit_native_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:bundle_parser_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/hilog:ability_cross_platform_hilog_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime:jsruntime_config",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability:abilitykit_native_config",
    ]

    sources = [
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/ability_delegator.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/ability_delegator_args.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/ability_delegator_registry.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/delegator_thread.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/iability_monitor.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/iability_stage_monitor.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/runner_runtime/js_test_runner.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability_delegator/test_runner.cpp",
    ]

    defines = []
    if (target_cpu == "arm64") {
      defines += [ "_ARM64_" ]
    }

    deps = [
      "${ability_runtime_cross_platform_path}/frameworks/native/base/event_handler:cross_platform_event_handler",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:cross_platform_bundle_parser",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/configuration:cross_platform_configuration",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/error:ability_runtime_error_util",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime:cross_platform_jsruntime",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/napi_base_context:napi_base_context",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/want:cross_platform_want",
      "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability:cross_platform_abilitykit_native",
      "//foundation/appframework/resource_management:global_resmgr",
    ]

    if (is_arkui_x) {
      include_dirs += [
        "//plugins/hilog/include",
        "//plugins/interfaces",
      ]
      deps += [ "//foundation/arkui/napi:ace_napi" ]
      if (target_os == "android") {
        defines += [ "ANDROID_PLATFORM" ]
      }
      if (target_os == "ios") {
        defines += [ "IOS_PLATFORM" ]
      }
    }
    subsystem_name = ability_subsystem_name
    part_name = ability_part_name
  }
}

appkit_delegator_appkit_native("appkit_delegator") {
}

ability_runtime_appkit_native("cross_platform_appkit_native") {
}

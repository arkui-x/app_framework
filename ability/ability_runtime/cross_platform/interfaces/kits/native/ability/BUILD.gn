# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/appframework/ability/ability_runtime/ability_runtime.gni")

config("abilitykit_native_config") {
  include_dirs = [
    "//base/global/resource_management/interfaces/inner_api/include",
    "//foundation/appframework/window_manager/interfaces/innerkits/wm",
    "//foundation/appframework/window_manager/interfaces/kits/napi/window_runtime/window_stage_napi",
    "//foundation/graphic/graphic_2d/interfaces/inner_api/wmclient",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/ability_manager",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/app_manager",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/configuration",
    "${ability_runtime_cross_platform_path}/interfaces/inner_api/want",
    "${ability_runtime_cross_platform_path}/interfaces/kits/native/ability",
    "${ability_runtime_cross_platform_path}/interfaces/kits/native/appkit",
    "${ability_runtime_cross_platform_path}/frameworks/native/base/bundle_parser/include",
  ]

  if (target_os == "android") {
    include_dirs += [
      "//foundation/arkui/ace_engine/adapter/android/entrance/java/jni",
      "//foundation/arkui/ace_engine/adapter/android/stage/ability/java/jni",
    ]
  } else if (target_os == "ios") {
    include_dirs +=
        [ "//foundation/arkui/ace_engine/adapter/ios/stage/ability" ]
  }
}

template("ability_runtime_abilitykit_native") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    subsystem_name = ability_subsystem_name
    part_name = ability_part_name
    configs = [
      ":abilitykit_native_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle:bundle_parser_config",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/hilog:ability_cross_platform_hilog_config",
      "${ability_runtime_cross_platform_path}/frameworks/js/napi/napi_common:napi_common_public_config",
    ]

    defines = []
    if (target_cpu == "arm64") {
      defines += [ "_ARM64_" ]
    }

    include_dirs = [
      "//foundation/arkui/napi",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/bundle",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/want",
      "${ability_runtime_cross_platform_path}/frameworks/native/jsruntime/include/",
    ]

    sources = [
      "${ability_runtime_cross_platform_path}/frameworks/native/ability/ability.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability/ability_context_impl.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability/js_ability.cpp",
      "${ability_runtime_cross_platform_path}/frameworks/native/ability/js_ability_context.cpp",
    ]

    deps = [
      "${ability_runtime_cross_platform_path}/frameworks/js/napi/napi_common:napi_common",
      "${ability_runtime_cross_platform_path}/interfaces/inner_api/jsruntime:cross_platform_jsruntime",
      "//foundation/appframework/window_manager/dm:dm",
      "//foundation/appframework/window_manager/wm:wm",
      "//foundation/arkui/napi:ace_napi",
    ]

    if (target_os == "android") {
      defines += [ "ANDROID_PLATFORM" ]
    } else if (target_os == "ios") {
      defines += [ "IOS_PLATFORM" ]
    }
    deps += [ "//foundation/appframework/resource_management:global_resmgr" ]
  }
}

ability_runtime_abilitykit_native("cross_platform_abilitykit_native") {
}
